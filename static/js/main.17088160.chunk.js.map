{"version":3,"sources":["Components/Form/Form.js","Components/ConatctsList/ContactsListItem.js","Components/Filter/Filter.js","Components/ConatctsList/ConatctsList.js","Components/App.js","index.js"],"names":["Form","state","name","number","onSubmit","e","preventDefault","props","addContact","setState","onChange","currentTarget","value","className","this","type","pattern","title","required","Component","ContactsListItem","contacts","map","el","id","onClick","deleteContact","Filter","findUsers","filter","toLowerCase","includes","ContactsList","findContact","App","userName","userNumber","contactsArr","forEach","push","alert","prevState","uuidv4","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17088160.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <label className=\"label\">\r\n          Name{' '}\r\n          <input\r\n            value={this.state.name}\r\n            className=\"label\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Phone{' '}\r\n          <input\r\n            value={this.state.number}\r\n            className=\"label\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.onChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  addContact: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactsListItem extends Component {\r\n  render() {\r\n    const { contacts } = this.props;\r\n\r\n    return contacts.map(el => {\r\n      return (\r\n        <li key={el.id}>\r\n          {el.name}: {el.number}\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            id={el.id}\r\n            onClick={this.props.deleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nContactsListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Filter extends Component {\r\n  findUsers = () => {\r\n    const { contacts, filter } = this.props.state;\r\n\r\n    return contacts.filter(el =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.findUsers().map(el => {\r\n      return (\r\n        <li key={el.id}>\r\n          {el.name}: {el.number}\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            id={el.id}\r\n            onClick={this.props.deleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nFilter.propTypes = { state: PropTypes.object };\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactsListItem from './ContactsListItem';\r\nimport Filter from '../Filter/Filter';\r\n\r\nexport default class ContactsList extends Component {\r\n  onChange = e => {\r\n    this.props.findContact(e.currentTarget.value);\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.props.state;\r\n\r\n    return (\r\n      <>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.onChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <ul>\r\n          {!filter ? (\r\n            <ContactsListItem\r\n              contacts={this.props.state.contacts}\r\n              deleteContact={this.props.deleteContact}\r\n            />\r\n          ) : (\r\n            <Filter\r\n              state={this.props.state}\r\n              deleteContact={this.props.deleteContact}\r\n            />\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactsList.propTypes = {\r\n  state: PropTypes.object,\r\n  findContact: PropTypes.func,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Form from './Form/Form';\r\nimport ContactsList from './ConatctsList/ConatctsList';\r\nimport './styles.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (userName, userNumber) => {\r\n    const contactsArr = [];\r\n    this.state.contacts.forEach(el => {\r\n      contactsArr.push(el.name, el.number);\r\n    });\r\n    if (contactsArr.includes(userNumber || userName.toLowerCase())) {\r\n      return alert('This person or number is already in contacts');\r\n    } else {\r\n      this.setState(prevState => ({\r\n        contacts: [\r\n          ...prevState.contacts,\r\n          { name: userName, id: uuidv4(), number: userNumber },\r\n        ],\r\n      }));\r\n    }\r\n  };\r\n\r\n  findContact = name => {\r\n    this.setState({ filter: name });\r\n  };\r\n\r\n  deleteContact = e => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(el => el.id !== e.target.id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form addContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <ContactsList\r\n          state={this.state}\r\n          findContact={this.findContact}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}